package fr.formation.inti.entity;
// Generated 18 févr. 2022 � 08:19:10 by Hibernate Tools 3.6.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * �quipes generated by hbm2java
 */
@Entity
@Table(name="équipes"
    ,catalog="football"
)
public class Équipes  implements java.io.Serializable {


     private Integer idéquipes;
     private Stades stades;
     private Ligues ligues;
     private String nom;
     private byte[] logo;
     private Integer points;
     private Integer butsMarqué;
     private Integer butsEncaissé;
     private Set<Matchs> matchsesForéquipesExtérieursIdéquipes = new HashSet<Matchs>(0);
     private Set<Joueurs> joueurses = new HashSet<Joueurs>(0);
     private Set<Matchs> matchsesForéquipesDomicilesIdéquipes = new HashSet<Matchs>(0);

    public Équipes() {
    }

	
    public Équipes(Stades stades, Ligues ligues) {
        this.stades = stades;
        this.ligues = ligues;
    }
    public Équipes(Stades stades, Ligues ligues, String nom, byte[] logo, Integer points, Integer butsMarqué, Integer butsEncaissé, Set<Matchs> matchsesForéquipesExtérieursIdéquipes, Set<Joueurs> joueurses, Set<Matchs> matchsesForéquipesDomicilesIdéquipes) {
       this.stades = stades;
       this.ligues = ligues;
       this.nom = nom;
       this.logo = logo;
       this.points = points;
       this.butsMarqué = butsMarqué;
       this.butsEncaissé = butsEncaissé;
       this.matchsesForéquipesExtérieursIdéquipes = matchsesForéquipesExtérieursIdéquipes;
       this.joueurses = joueurses;
       this.matchsesForéquipesDomicilesIdéquipes = matchsesForéquipesDomicilesIdéquipes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idéquipes", unique=true, nullable=false)
    public Integer getIdéquipes() {
        return this.idéquipes;
    }
    
    public void setIdéquipes(Integer idéquipes) {
        this.idéquipes = idéquipes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="stades_idstades", nullable=false)
    public Stades getStades() {
        return this.stades;
    }
    
    public void setStades(Stades stades) {
        this.stades = stades;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ligues_idligues", nullable=false)
    public Ligues getLigues() {
        return this.ligues;
    }
    
    public void setLigues(Ligues ligues) {
        this.ligues = ligues;
    }

    
    @Column(name="nom", length=45)
    public String getNom() {
        return this.nom;
    }
    
    public void setNom(String nom) {
        this.nom = nom;
    }

    
    @Column(name="logo")
    public byte[] getLogo() {
        return this.logo;
    }
    
    public void setLogo(byte[] logo) {
        this.logo = logo;
    }

    
    @Column(name="points")
    public Integer getPoints() {
        return this.points;
    }
    
    public void setPoints(Integer points) {
        this.points = points;
    }

    
    @Column(name="buts marqué")
    public Integer getButsMarqué() {
        return this.butsMarqué;
    }
    
    public void setButsMarqué(Integer butsMarqué) {
        this.butsMarqué = butsMarqué;
    }

    
    @Column(name="buts encaissé")
    public Integer getButsEncaissé() {
        return this.butsEncaissé;
    }
    
    public void setButsEncaissé(Integer butsEncaissé) {
        this.butsEncaissé = butsEncaissé;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="équipesByéquipesExtérieursIdéquipes")
    public Set<Matchs> getMatchsesForéquipesExtérieursIdéquipes() {
        return this.matchsesForéquipesExtérieursIdéquipes;
    }
    
    public void setMatchsesForéquipesExtérieursIdéquipes(Set<Matchs> matchsesForéquipesExtérieursIdéquipes) {
        this.matchsesForéquipesExtérieursIdéquipes = matchsesForéquipesExtérieursIdéquipes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="équipes")
    public Set<Joueurs> getJoueurses() {
        return this.joueurses;
    }
    
    public void setJoueurses(Set<Joueurs> joueurses) {
        this.joueurses = joueurses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="équipesByéquipesDomicilesIdéquipes")
    public Set<Matchs> getMatchsesForéquipesDomicilesIdéquipes() {
        return this.matchsesForéquipesDomicilesIdéquipes;
    }
    
    public void setMatchsesForéquipesDomicilesIdéquipes(Set<Matchs> matchsesForéquipesDomicilesIdéquipes) {
        this.matchsesForéquipesDomicilesIdéquipes = matchsesForéquipesDomicilesIdéquipes;
    }




}
